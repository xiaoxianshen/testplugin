apply plugin: 'groovy'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:3.0.0'
}

repositories {
    jcenter()
    google()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

group 'com.unit.testplugin'
version '0.0.1'

def gitUrl = 'https://github.com/harvie1208/TracePoint.git'
def siteUrl = 'https://github.com/harvie1208/TracePoint'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name 'TracePoint'
                description 'android tracepoint gradle plugin'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'harvie'
                        name 'harvie'
                        email 'harvie1208@foxmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

/*signing {
    sign configurations.archives
}*/

tasks.withType(Javadoc) {
    /*options.encoding = 'UTF-8'*/
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

bintray {
    Properties properties = new Properties()
    boolean isHasFile = false
    if (project.rootProject.file('local.properties') != null){
        isHasFile = true
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    user = isHasFile ? properties.getProperty("bintray.user") : System.getenv("bintray.user")
    key = isHasFile ? properties.getProperty("bintray.apikey") : System.getenv("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "testPlugin" //项目名称
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}